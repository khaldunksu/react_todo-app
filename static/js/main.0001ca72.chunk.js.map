{"version":3,"sources":["TodoList.js","Footer.js","Header.js","App.js","index.js"],"names":["TodoList","_ref","todos","destroy","checked","checkedAll","react_default","a","createElement","className","type","id","every","i","completed","length","onChange","event","target","htmlFor","map","item","key","onClick","title","Footer","props","clearCompleted","setFilter","selectedFilter","FILTER_TYPES","filter","Object","toConsumableArray","values","href","some","style","display","Header","state","inputValue","handleInputValue","_this","setState","value","onSubmit","preventDefault","add","this","placeholder","React","Component","all","active","App","counterId","generateId","prevState","concat","itemId","objectSpread2","getFilterTodos","_this$state","todo","src_Header","src_TodoList","src_Footer","stateComplitedFilter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0001ca72.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, destroy, checked, checkedAll }) => (\n\n  <section className=\"main\">\n\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={todos.every(i => i.completed) && todos.length !== 0}\n      onChange={(event) => {\n        checkedAll(event.target.checked);\n      }\n      }\n    />\n    <label htmlFor=\"toggle-all\">Mark</label>\n\n    <ul className=\"todo-list\">\n      {todos.map(item => (\n        <li key={item.id}>\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={item.id}\n              checked={item.completed}\n              onClick={() => checked(item.id)}\n            />\n            <label htmlFor=\"toggle\">{item.title}</label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => destroy(item.id)}\n            />\n          </div>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  destroy: PropTypes.func.isRequired,\n  checked: PropTypes.func.isRequired,\n  checkedAll: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (props) => {\n  const { todos, clearCompleted, setFilter,\n    selectedFilter, FILTER_TYPES } = props;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        items left\n        {' '}\n        {todos.filter(item => !item.completed).length}\n      </span>\n      <ul className=\"filters\">\n        {[...Object.values(FILTER_TYPES)].map(filter => (\n          <li>\n            <a\n              href=\"#/\"\n              className={selectedFilter === filter\n                ? 'selected' : ''}\n              onClick={() => setFilter(filter)}\n            >\n              {filter}\n            </a>\n          </li>\n        ))}\n      </ul>\n      {todos.some(item => item.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => clearCompleted()}\n          style={{ display: 'block' }\n          }\n        >\n          {' '}\n          Clear completed\n          {' '}\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n  FILTER_TYPES: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleInputValue = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const { inputValue } = this.state;\n    const { add } = this.props;\n\n    add(inputValue);\n    this.setState({\n      inputValue: '',\n    });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n\n    return (\n      <header className=\"header\">\n        <form onSubmit={this.onSubmit}>\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={inputValue}\n            onChange={this.handleInputValue}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = { add: PropTypes.func.isRequired };\n\nexport default Header;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst FILTER_TYPES = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    counterId: 1,\n    selectedFilter: FILTER_TYPES.all,\n  }\n\n  generateId = () => {\n    const { counterId } = this.state;\n\n    this.setState(state => ({\n      counterId: state.counterId + 1,\n    }));\n\n    return counterId;\n  }\n\n  add = (title) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, {\n        id: this.generateId(),\n        title,\n        completed: false,\n      }],\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => !item.completed),\n    }));\n  }\n\n  destroy = (itemId) => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.id !== itemId),\n    }));\n  }\n\n  checked = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n\n        return { ...item };\n      }),\n    }));\n  };\n\n  setFilter = (filter) => {\n    this.setState({\n      selectedFilter: filter,\n    });\n  }\n\n  checkedAll = (checked) => {\n    this.setState(state => ({\n      todos: state.todos.map(item => ({\n        ...item, completed: checked,\n      })),\n\n    }));\n  }\n\n  getFilterTodos = () => {\n    const { todos, selectedFilter } = this.state;\n    const { completed, active, all } = FILTER_TYPES;\n\n    switch (selectedFilter) {\n      case completed: return todos.filter(todo => todo.completed);\n      case active: return todos.filter(todo => !todo.completed);\n      case all:\n      default: return todos;\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <form className=\"header\" onSubmit={this.onSubmit}>\n          <h1>todos</h1>\n          <Header add={this.add} />\n        </form>\n        <TodoList\n          todos={this.getFilterTodos()}\n          destroy={this.destroy}\n          checkedAll={this.checkedAll}\n          checked={this.checked}\n        />\n        {this.state.todos.length !== 0\n          && (\n            <Footer\n              todos={this.state.todos}\n              FILTER_TYPES={FILTER_TYPES}\n              clearCompleted={this.clearCompleted}\n              stateComplitedFilter={this.stateComplitedFilter}\n              selectedFilter={this.state.selectedFilter}\n              setFilter={this.setFilter}\n            />\n          )}\n      </section>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}