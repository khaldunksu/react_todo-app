{"version":3,"sources":["TodoList.js","Footer.js","App.js","index.js"],"names":["TodoList","_ref","todos","destroy","checked","checkedAll","react_default","a","createElement","className","style","display","type","id","every","i","completed","length","onChange","event","target","htmlFor","map","item","key","onClick","title","Footer","clearCompleted","setFilter","filter","href","some","FILTER_TYPES","all","active","App","state","inputValue","counterId","selectedFilter","Id","_this","setState","hundleInputValue","value","onSubmit","preventDefault","concat","Object","toConsumableArray","itemId","objectSpread2","getFilterTodos","_this$state","todo","this","placeholder","src_TodoList","src_Footer","stateComplitedFilter","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1452b54f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nconst TodoList = ({ todos, destroy, checked, checkedAll }) => {\n  return (\n\n    <section className=\"main\" style={{ display: 'block' }}>\n      <input type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={todos.every(i => i.completed) && todos.length !== 0}\n        onChange={(event) => {\n          checkedAll(event.target.checked)\n        }\n        }\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {todos.map((item) =>\n          <li key={item.id} className=''>\n            <div className=\"view\">\n              <input type=\"checkbox\"\n                className=\"toggle\"\n                id={item.id}\n                checked={item.completed}\n                onClick={() => checked(item.id)}\n              />\n              <label htmlFor=''>{item.title}</label>\n              <button type=\"button\" className=\"destroy\" onClick={() => destroy(item.id)} />\n            </div>\n          </li>)}\n      </ul>\n    </section>\n  )\n}\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  destroy: PropTypes.func.isRequired,\n  checked: PropTypes.func.isRequired,\n  checkedAll: PropTypes.func.isRequired,\n}\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Footer = ({ todos, clearCompleted, setFilter }) => {\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        items left {todos.filter(item => !item.completed).length}\n\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a href=\"#/\" className=\"selected\"\n            onClick={() => setFilter('All')}>\n            All</a>\n        </li>\n\n        <li>\n          <a href=\"#/active\"\n            onClick={() => setFilter('Active')}>\n            Active</a>\n        </li>\n\n        <li>\n          <a href=\"#/completed\"\n            onClick={() => setFilter('Completed')}>\n            Completed</a>\n        </li>\n\n      </ul>\n\n      {todos.some(item => item.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => clearCompleted()}\n          style={{ display: 'block' }\n          }\n        > Clear completed </button>\n      )}\n\n    </footer>\n  )\n}\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n}\nexport default Footer\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\n\nconst FILTER_TYPES = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed'\n}\n\nclass App extends React.Component {\n  state = {\n    inputValue: '',\n    todos: [],\n    counterId: 1,\n    selectedFilter: FILTER_TYPES.all\n  }\n\n  Id = () => {\n    const { counterId } = this.state;\n    this.setState(state => ({\n      counterId: state.counterId + 1\n    }));\n    return counterId;\n  }\n  hundleInputValue = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    })\n\n  }\n  onSubmit = (event) => {\n    event.preventDefault()\n    this.setState({\n      inputValue: '',\n      todos: [...this.state.todos, {\n        id: this.Id(),\n        title: this.state.inputValue,\n        completed: false,\n      }]\n    });\n\n  }\n  clearCompleted = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => !item.completed),\n    }));\n  }\n\n  destroy = (itemId) => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.id !== itemId),\n    }));\n  }\n\n  checked = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n        return { ...item };\n      }),\n    }));\n  };\n\n\n  setFilter = (filter) => {\n    this.setState({\n      selectedFilter: filter\n    })\n  }\n\n  checkedAll = (checked) => {\n    this.setState(state => ({\n      todos: state.todos.map(item => ({ ...item, completed: checked }))\n\n    }))\n\n  }\n  getFilterTodos = () => {\n    const { todos, selectedFilter } = this.state\n    const { completed, active, all } = FILTER_TYPES\n    switch (selectedFilter) {\n      case completed: return todos.filter(todo => todo.completed);\n      case active: return todos.filter(todo => !todo.completed)\n      case all:\n      default: return todos;\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <form className=\"header\" onSubmit={this.onSubmit}>\n          <h1>todos</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.inputValue}\n            onChange={this.hundleInputValue}\n          />\n        </form>\n        <TodoList\n          todos={this.getFilterTodos()}\n          destroy={this.destroy}\n          checkedAll={this.checkedAll}\n          checked={this.checked}\n        />\n        <Footer todos={this.state.todos}\n          clearCompleted={this.clearCompleted}\n          stateComplitedFilter={this.stateComplitedFilter}\n          selectedFilter={this.state.selectedFilter}\n          setFilter={this.setFilter} />\n      </section>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}