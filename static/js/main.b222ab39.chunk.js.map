{"version":3,"sources":["TodoList.js","Footer.js","App.js","index.js"],"names":["TodoList","_ref","todos","destroy","checked","checkedAll","react_default","a","createElement","className","style","display","htmlFor","type","id","every","i","completed","length","onChange","event","target","map","item","key","onClick","title","Footer","clearCompleted","setFilter","filter","href","some","FILTER_TYPES","all","active","App","state","inputValue","counterId","selectedFilter","Id","_this","setState","hundleInputValue","value","onSubmit","preventDefault","concat","Object","toConsumableArray","itemId","objectSpread2","getFilterTodos","_this$state","todo","this","placeholder","src_TodoList","src_Footer","stateComplitedFilter","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b222ab39.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, destroy, checked, checkedAll }) => (\n\n  <section className=\"main\" style={{ display: 'block' }}>\n    <label htmlFor=\"toggle-all\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={todos.every(i => i.completed) && todos.length !== 0}\n        onChange={(event) => {\n          checkedAll(event.target.checked);\n        }\n        }\n      />\n    </label>\n\n    <ul className=\"todo-list\">\n      {todos.map(item => (\n        <li key={item.id} className=\"\">\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={item.id}\n              checked={item.completed}\n              onClick={() => checked(item.id)}\n            />\n            <label htmlFor=\"toggle\">{item.title}</label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => destroy(item.id)}\n            />\n          </div>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  destroy: PropTypes.func.isRequired,\n  checked: PropTypes.func.isRequired,\n  checkedAll: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({ todos, clearCompleted, setFilter }) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n        items left\n      {' '}\n      {todos.filter(item => !item.completed).length}\n\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className=\"selected\"\n          onClick={() => setFilter('All')}\n        >\n            All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={() => setFilter('Active')}\n        >\n            Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={() => setFilter('Completed')}\n        >\n            Completed\n        </a>\n      </li>\n\n    </ul>\n\n    {todos.some(item => item.completed) && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={() => clearCompleted()}\n        style={{ display: 'block' }\n        }\n      >\n        {' '}\nClear completed\n        {' '}\n      </button>\n    )}\n\n  </footer>\n);\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\nexport default Footer;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\n\nconst FILTER_TYPES = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n\nclass App extends React.Component {\n  state = {\n    inputValue: '',\n    todos: [],\n    counterId: 1,\n    selectedFilter: FILTER_TYPES.all,\n  }\n\n  Id = () => {\n    const { counterId } = this.state;\n\n    this.setState(state => ({\n      counterId: state.counterId + 1,\n    }));\n\n    return counterId;\n  }\n\n  hundleInputValue = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.setState(state => ({\n      inputValue: '',\n      todos: [...state.todos, {\n        id: this.Id(),\n        title: state.inputValue,\n        completed: false,\n      }],\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => !item.completed),\n    }));\n  }\n\n  destroy = (itemId) => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.id !== itemId),\n    }));\n  }\n\n  checked = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n\n        return { ...item };\n      }),\n    }));\n  };\n\n  setFilter = (filter) => {\n    this.setState({\n      selectedFilter: filter,\n    });\n  }\n\n  checkedAll = (checked) => {\n    this.setState(state => ({\n      todos: state.todos.map(item => ({\n        ...item, completed: checked,\n      })),\n\n    }));\n  }\n\n  getFilterTodos = () => {\n    const { todos, selectedFilter } = this.state;\n    const { completed, active, all } = FILTER_TYPES;\n\n    switch (selectedFilter) {\n      case completed: return todos.filter(todo => todo.completed);\n      case active: return todos.filter(todo => !todo.completed);\n      case all:\n      default: return todos;\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <form className=\"header\" onSubmit={this.onSubmit}>\n          <h1>todos</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.inputValue}\n            onChange={this.hundleInputValue}\n          />\n        </form>\n        <TodoList\n          todos={this.getFilterTodos()}\n          destroy={this.destroy}\n          checkedAll={this.checkedAll}\n          checked={this.checked}\n        />\n        {this.state.todos.length !== 0\n          && (\n            <Footer\n              todos={this.state.todos}\n              clearCompleted={this.clearCompleted}\n              stateComplitedFilter={this.stateComplitedFilter}\n              selectedFilter={this.state.selectedFilter}\n              setFilter={this.setFilter}\n            />\n          )}\n      </section>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}